stages:
  - Code Static Analysis
  - Build Dependencies
variables:
  BASE_IMAGE: magento/magento-cloud-docker-php:7.3-cli-1.0
#composer:
#  stage: Build Dependencies
#  image: ${BASE_IMAGE}
#  script:
#    - composer config cache-files-dir cache/composer
#    - composer install -n --no-progress --optimize-autoloader
##  artifacts:
##    expire_in: 2 hours
##    paths:
##      - vendor/
#  cache:
#    key: apollo-cache-composer
#    paths:
#      - cache/composer
#  only:
#    - production
#    - staging
#    - gitlab-ci
#    - integration
#    - smartosc
#  tags:
#    - Magento Cloud

phpcs-report:
  stage: Code Static Analysis
  image: ${BASE_IMAGE}
  cache:
    key: apollo-cache-composer
    paths:
      - cache/composer
  script:
    - composer config cache-files-dir cache/composer
    - composer install -n --no-progress --optimize-autoloader
    - mkdir -p php-cs-report
    - vendor/bin/phpcs --standard=./vendor/magento/magento-coding-standard/Magento2/ruleset.xml --error-severity=1 --warning-severity=8 --runtime-set ignore_warnings_on_exit 1 --runtime-set ignore_errors_on_exit 1 app/code/Trans > php-cs-report/Trans-code-quality-M2-report.txt
    - vendor/bin/phpcs --standard=./vendor/magento-ecg/coding-standard/EcgM2 --error-severity=1 --warning-severity=8 --runtime-set ignore_warnings_on_exit 1 --runtime-set ignore_errors_on_exit 1 app/code/Trans > php-cs-report/Trans-code-quality-M2ECG-report.txt
    - vendor/bin/phpcs --standard=./vendor/magento/magento-coding-standard/Magento2/ruleset.xml --error-severity=1 --warning-severity=8 --runtime-set ignore_warnings_on_exit 1 --runtime-set ignore_errors_on_exit 1 app/code/SM > php-cs-report/SM-code-quality-M2-report.txt
    - vendor/bin/phpcs --standard=./vendor/magento-ecg/coding-standard/EcgM2 --error-severity=1 --warning-severity=8 --runtime-set ignore_warnings_on_exit 1 --runtime-set ignore_errors_on_exit 1 app/code/SM > php-cs-report/SM-code-quality-M2ECG-report.txt
  artifacts:
    expire_in: 2 days
    paths:
      - php-cs-report/
  only:
    - production
    - staging
    - gitlab-ci
    - integration
    - smartosc
    - merge_requests
  tags:
    - Magento Cloud
di-compile:
  stage: Code Static Analysis
  image: ${BASE_IMAGE}
  cache:
    key: apollo-cache-composer
    paths:
      - cache/composer
  script:
    - composer config cache-files-dir cache/composer
    - composer install -n --no-progress --optimize-autoloader
    - bin/magento setup:di:compile
  only:
    - production
    - staging
    - gitlab-ci
    - integration
    - smartosc
    - merge_requests
  tags:
    - Magento Cloud
#php-cs-fixer:
#  stage: Code Static Analysis
#  image: ${BASE_IMAGE}
#  dependencies:
#    - composer
#  cache:
#    key: apollo-cache-composer
#    paths:
#      - cache/composer
#  script:
#    - composer config cache-files-dir cache/composer
#    - composer install -n --no-progress --optimize-autoloader
#    - vendor/bin/php-cs-fixer fix app/code -v --dry-run
#    - vendor/bin/php-cs-fixer fix app/code/SM -v --dry-run
#    - vendor/bin/php-cs-fixer fix app/code -v --dry-run
#  except:
#    - production
#    - master
#    - tags
#    - schedules
#  tags:
#    - Magento Cloud
